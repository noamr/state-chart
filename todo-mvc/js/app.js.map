{
  "version": 3,
  "sources": ["../app.ts"],
  "sourcesContent": ["function mvc({host, controller}) {\n    /*\n    const listen = (name, match, callback) => {\n        let element = host\n        let capture = false\n        if (match === ':document')\n            element = host.ownerDocument\n        else if (match === ':window')\n            element = host.ownerDocument.defaultView\n        else\n            capture = true\n\n        const listener = e => {\n            const targetParams = matchParams(e, matcher)\n            if (targetParams)\n                callback(matchParams)\n        }\n\n        element.addEventListener(name, listener, {capture})\n    }\n\n    const apply = (type, name, value) => {\n        switch (type) {\n            case 'attribute':\n                value === null ? host.removeAttribute(name) : host.setAttribute(name, value)\n                break\n            case 'class':\n                value ? host.classList.add(name) : host.classList.removeAttribute(name)\n                break;\n        }\n    }\n    */\n}\n\nclass MVCModel extends HTMLElement {\n   constructor() {\n        super(...arguments);\n        const slot = document.createElement('slot')\n        const shadow = this.attachShadow({mode: 'open'})\n        shadow.appendChild(slot)\n\n        const fields = new Map()\n\n        slot.addEventListener('slotchange', e => {\n            const elements = slot.assignedElements()\n            for (const el of elements) {\n                switch (e.tagName) {\n                    case 'field': {\n                        const name = e.getAttribute('name')\n                        const defaultValue = e.textContent\n                        const type = e.getAttribute('type')\n                        const getDefault = defaultValue === ':uuid:' ? uuid() : () => defaultValue\n                        fields.set(name, {type, getDefault})\n                        break\n                    }\n                    case 'filter': {\n                        const name = e.getAttribute('name')\n                        const defaultValue = e.textContent\n                        const type = e.getAttribute('type')\n                        const getDefault = defaultValue === ':uuid:' ? uuid() : () => defaultValue\n                        fields.set(name, {type, getDefault})\n                        break\n                    }\n                    case 'aggregate':\n                    break\n                }\n            }\n        })\n   }     \n}\n\n\nclass MVC extends HTMLElement {\n    models = null\n    view = null\n    controller = null\n    constructor(...args) {\n        super()\n        const slot = document.createElement('slot')\n        const shadow = this.attachShadow({mode: 'open'})\n        const style = document.createElement('style')\n        style.innerHTML = `\n            :host {display: contents}\n            ::slotted(model) { display: none }\n            ::slotted(scxml) { display: none }\n        `\n        shadow.appendChild(style)\n        shadow.appendChild(slot)\n\n        slot.addEventListener('slotchange', e => {\n//             const elements = slot.assignedElements()\n//             elements.forEach(element => {\n//                 switch (element.tagName) {\n//                     case 'scxml':\n// //                        initController({controller: element, host: this})\n//                     break;\n//                     default:\n//                     break;\n//                 }\n//             })\n        })\n    }\n}\n\ncustomElements.define('mvc-app', MVC)\ncustomElements.define('mvc-model', MVCModel)"],
  "mappings": "AAAA,aAAa,CAAC,MAAM,aAAa;AAAA;AAkCjC,uBAAuB,YAAY;AAAA,EAChC,cAAc;AACT,UAAM,GAAG;AACT,UAAM,OAAO,SAAS,cAAc;AACpC,UAAM,SAAS,KAAK,aAAa,CAAC,MAAM;AACxC,WAAO,YAAY;AAEnB,UAAM,SAAS,IAAI;AAEnB,SAAK,iBAAiB,cAAc,OAAK;AACrC,YAAM,WAAW,KAAK;AACtB,iBAAW,MAAM,UAAU;AACvB,gBAAQ,EAAE;AAAA,eACD,SAAS;AACV,kBAAM,OAAO,EAAE,aAAa;AAC5B,kBAAM,eAAe,EAAE;AACvB,kBAAM,OAAO,EAAE,aAAa;AAC5B,kBAAM,aAAa,iBAAiB,WAAW,SAAS,MAAM;AAC9D,mBAAO,IAAI,MAAM,CAAC,MAAM;AACxB;AAAA;AAAA,eAEC,UAAU;AACX,kBAAM,OAAO,EAAE,aAAa;AAC5B,kBAAM,eAAe,EAAE;AACvB,kBAAM,OAAO,EAAE,aAAa;AAC5B,kBAAM,aAAa,iBAAiB,WAAW,SAAS,MAAM;AAC9D,mBAAO,IAAI,MAAM,CAAC,MAAM;AACxB;AAAA;AAAA,eAEC;AACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAQpB,kBAAkB,YAAY;AAAA,EAI1B,eAAe,MAAM;AACjB;AAJJ,kBAAS;AACT,gBAAO;AACP,sBAAa;AAGT,UAAM,OAAO,SAAS,cAAc;AACpC,UAAM,SAAS,KAAK,aAAa,CAAC,MAAM;AACxC,UAAM,QAAQ,SAAS,cAAc;AACrC,UAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAKlB,WAAO,YAAY;AACnB,WAAO,YAAY;AAEnB,SAAK,iBAAiB,cAAc,OAAK;AAAA;AAAA;AAAA;AAejD,eAAe,OAAO,WAAW;AACjC,eAAe,OAAO,aAAa;",
  "names": []
}
